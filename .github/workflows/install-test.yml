name: Install test

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop
  schedule:
    - cron: '0 6 * * 0'

jobs:
  build-matrix:
    runs-on: ubuntu-latest
    steps:
      - id: os
        run: echo '::set-output name=os_matrix::["ubuntu-latest", "macos-latest", "windows-latest"]'
    outputs:
      os_matrix: ${{ steps.os.outputs.os_matrix }}

  build:
    needs: build-matrix
    strategy:
      fail-fast: false
      matrix:
        os: ${{ fromJson(needs.build-matrix.outputs.os_matrix) }}
        python-version: ['3.7', '3.8', '3.9', '3.10']
    runs-on: ${{ matrix.os }}
#    strategy:
#      fail-fast: false
#      matrix:
#        os: [ubuntu-latest, macos-latest, windows-latest]
#        python-version: ['3.7', '3.8', '3.9', '3.10']
    defaults:
      run:
        shell: bash -l {0}
    name: python ${{ matrix.python-version }} on ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Conda init
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          activate-environment: xsar
          python-version: ${{ matrix.python-version }}
      - name: Conda dependencies
        run: |
          . docs/scripts/conda_setenv
          . docs/scripts/conda_install_minimal
      - name: Install xsar
        run: |
          pip install -e .
          pip install -r requirements.txt
      - name: Packages list
        run: |
          conda info
          python -V
          conda list
      - name: Test install
        run: pytest

